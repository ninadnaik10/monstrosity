"""Init schema

Revision ID: 1dadbe65d70d
Revises: 
Create Date: 2024-10-14 20:37:29.279624

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes


# revision identifiers, used by Alembic.
revision = '1dadbe65d70d'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('driver',
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('full_name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('phone', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=True),
    sa.Column('driver_id', sa.Uuid(), nullable=False),
    sa.Column('license_number', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('hashed_password', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('driver_id')
    )
    op.create_index(op.f('ix_driver_email'), 'driver', ['email'], unique=True)
    op.create_table('location',
    sa.Column('location_id', sa.Uuid(), nullable=False),
    sa.Column('latitude', sa.Numeric(precision=9, scale=6), nullable=False),
    sa.Column('longitude', sa.Numeric(precision=9, scale=6), nullable=False),
    sa.Column('address', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('city', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('state', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('country', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('postal_code', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.PrimaryKeyConstraint('location_id')
    )
    op.create_table('user',
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('full_name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('phone', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=True),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('hashed_password', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_table('vehicletype',
    sa.Column('vehicle_type_id', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('base_price', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('price_per_km', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('capacity', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('vehicle_type_id')
    )
    op.create_table('booking',
    sa.Column('booking_id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('driver_id', sa.Uuid(), nullable=False),
    sa.Column('pickup_location_id', sa.Uuid(), nullable=False),
    sa.Column('dropoff_location_id', sa.Uuid(), nullable=False),
    sa.Column('booking_time', sa.DateTime(), nullable=False),
    sa.Column('pickup_time', sa.DateTime(), nullable=False),
    sa.Column('dropoff_time', sa.DateTime(), nullable=False),
    sa.Column('estimated_price', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('final_price', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['driver_id'], ['driver.driver_id'], ),
    sa.ForeignKeyConstraint(['dropoff_location_id'], ['location.location_id'], ),
    sa.ForeignKeyConstraint(['pickup_location_id'], ['location.location_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('booking_id')
    )
    op.create_table('item',
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('owner_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['user.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('payment',
    sa.Column('payment_id', sa.Uuid(), nullable=False),
    sa.Column('booking_id', sa.Uuid(), nullable=False),
    sa.Column('amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('payment_method', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('payment_time', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['booking_id'], ['booking.booking_id'], ),
    sa.PrimaryKeyConstraint('payment_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('payment')
    op.drop_table('item')
    op.drop_table('booking')
    op.drop_table('vehicletype')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_table('location')
    op.drop_index(op.f('ix_driver_email'), table_name='driver')
    op.drop_table('driver')
    # ### end Alembic commands ###
